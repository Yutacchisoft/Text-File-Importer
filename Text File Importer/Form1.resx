<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="folderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAUAICAQAAEABADoAgAAVgAAABAQEAABAAQAKAEAAD4DAAAwMAAAAQAIAKgOAABmBAAAICAAAAEA
        CACoCAAADhMAABAQAAABAAgAaAUAALYbAAAoAAAAIAAAAEAAAAABAAQAAAAAAIACAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAICAgADAwMAAAAD/AAD/AAAA//8A/wAAAP8A
        /wD//wAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////8oAAAAEAAAACAA
        AAABAAQAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AIAAgAD/AP8AgICAAMDAwAD///8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGZmYxMTExMWZmZhVVVVVTYxMTNVVVVVExVV
        UVVVBVUxNRMTUFUFVRMVMTFQVQVVMTUTE1IFBFUWFTExVABAVTE1ExNVBQBFExUxMVVQUAUxNRMTVVVV
        VRMVMTFVVVVVNjVTExMTExMWYVUxMTExUWZmNVVVVVVTZmZhMTExMTFm+AH///gB//8AAP//AAD//wAA
        //8AAP//AAH//wAA//8AAP//AAD//wAA//8AAf//AAH//4AD///AA///4AP//ygAAAAwAAAAYAAAAAEA
        CAAAAAAAgAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXzlcAGE1XwBlN2EAZzpkAGo9ZgBtP2oAcTtvAHQ5
        cQB2PnQAeT92AGpBZwBuQWoAckVuAGVRZABuVWsAdEdwAHlCdwB2SXMAd0p0AHZPdAB6TXUAe0h4AH1O
        eQB5VHYAflF5AH5ZewBxY3AAgUt/AIFUfgBBUMIAhFaBAIVWhACFWYEAiV2FAI5XjgCMXIoAlluWAINg
        gACEYYEAiGWFAIhqhQCOYIkAi2WJAIxpigCMcIsAj3SOAJB1jgCWaZUAmGCYAJ5pngCGeZEAjH+YAJNz
        kQCUcpIAknmRAJh9lQCVd5sAm3GaAJ92mgCccJwAmnqYAKJwogCgeqAAgICAAJmCmACgi58AnJGlAKOG
        owCki6MApYqkAKiBqgCui6sApJCjAKGWqQCqlakApJqsAK6brACpn7AAsZCwALSRtgC2mLYAupi8AKuj
        tACvpbUAs6GxALSisgC2pLUAuKW2ALKqugC6qrkAv7C+ALy0wgCzs/8AwaLBAMOpwQDFq8YAxb7FAMi6
        xgDLs8oAy7/LANO+0wDMwMsAz8POAM7F0ADWxdYA1MzTAN3M3QDd09sA3tbdAN/Y3wDexeAA4MbhAOHa
        4ADl2uUA5tDoAOjS6ADq2eoA693tAObh5gDp5OkA7ebtAPHl8QDx6fMA8O3wAPbv9gD27fkA+O76APb0
        9gD49PYA+fX5APr4+gD++f4A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEQkYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAEQ/OiUlJSUyOkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARD86JSUl
        MjtQXoV0hYSFOkQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEPzslJSUyO1BehXSFhYWFhYWFhYSFJUQA
        AAAAAAAAAAAAAAAAAAAAAEQ9OiUlJTI7XlKFdISFhYWFhYWFhYWFhYWFhYSFJUQAAAAAAAAAMzMzMzMz
        MzM5MjpPYIV5hISEhISEhIWFhYWFhYWFhYWFhYWFhYSFMkQAAAAAAAAAM4WFhYWFhYWFhYWFhYWFhYWF
        hYWFhYWFhYWFhYWFhYWFhYWFhYSFMkQAAAAAAAAAM4UYGB0dIiQ7hYWFhYWFhYWFhYWFhYWFhYWFhYWF
        hYWFhISEhYSEMhQdFgAAAAAAM4UJFR0dIiIkhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYSFhISFRwgI
        CAAAAAAAM4UNFRUdHSIXbIWFhYWFhYWFhYWFhYWFhYWFhV2FhYSFhYSEhYSEUAgICAAAAAAAM4UNFBUd
        HRUBV2kkT4WFhYWFhYWFhYWFhYWFXR5dhYWEhYSFhISFXggICDUAAAAAM4UNDRUVFQgRBwgHCIWFhYWF
        hYWFhYWFhYWFHh4ehYWFhYSEhYSEhQgICDUAAAAAM4UFDQ0VFQgIF1I6SIWFhYWFhYWFhYWFhYVdHh4e
        hYWEhYSFhIWEhQoICCoAAAAAM4UFCw0UFRUdIoWFhYWFhYWFhYWFhYWFhYVdHh4ehYWFhYSEhYSEdRYI
        CCAAAAAAM4UEBw0NDRgVHYCFhYWFhYWFhB6EhYWFhYV2Hh4ehYWEhYWEhIWEhBwICCAAAAAAM4UCBQUL
        DQ0NAWqFhYWFhYWFHh4ehYWFhYWFHh4ehYWFhIWEhYSEhBYICB0AAAAAM4UCAgUHCw0LAT1PETuFhYWF
        Hh4eHoWFhYWFHh4ehYWFhYWEhIWEhCMdUAAAAAAAM4UEAgMEBAcICAgICAiFhYWFHh4eHoSFhYWFHh4e
        HoWEhYSFhISFhT9EAAAAAAAAM4UmGAQEBAUHBx1rT1+FhYWFfB4eHh6FhYWFHh4eHoWFhYWEhYSFhTtC
        AAAAAAAAM4UmKCkmFAQFBQuFhYWFhYWFhR4eHh51hYWFhB4eHoWFhIWEhIWEhFJEAAAAAAAAM4UmKSkq
        LS0hCwt5hYWFhYWFhR4eHh4ehYWFhR4eHh6FhYSFhISFhVJCAAAAAAAAM4UmKSItLS0vKQ9qhYWFhYWF
        hYQeHh4eHoWFhXUeHh6FhYWEhYSFhVAIHRYAAAAAM4UpKS0tLS0qKgs1KggwhYWFhYUeHh4eHh6FhYUe
        Hh5zhYWFhISFhYUICAgAAAAAM4UoKi0tLTUtCAkICAgIhYWFhYV5Hh4eHh55hYUeHh4ehYSFhIWEhIUI
        CAgAAAAAM4UtLS0tNS43ISI9cmNrhYWFhYWFHh4eHh4ehIWFHh4eHoWFhISFhYUICAg1AAAAM4UtLS03
        LTc3Nzc9hYWFhYWFhYWFHh4eHh4eHoSFHh4eHoWFhIWEhIQRCAg1AAAAM4UtLTc3Nzc3PT03eYWFhYWF
        hYWFhR4eHh4eHh6FhR4eHnmFhISFhYUKCAgqAAAAM4U3Ny03Nzc3QTcOYYFrhYWFhYWFhR4eHh4eHh4e
        hR4eHh6FhYSFhYUcCAgdAAAAM4U3Nzc3QUFBNyIUIRcIMIWFhYWFhYAeHh4eHh4eHnkeHh6EhYSFhYUg
        CAgdAAAAM4U4QUFBQUE4QQgICAgICIWFhYWFhYUeHh4eHh4eHh4eHh5+hYSFhYUjCAgdAAAAM4U4QUFB
        QUFEOC41QoVrhYWFhYWFhYV5Hh4ehR4eHh4eHh4ehYSFhYUyHVAAAAAAM4VaQkJCQkJCQkJCQoWFhYWF
        hYWFhYWFHh4eeYV5Hh4eHh58hYSFhYVSRAAAAAAAN3hhS0JLQktCS0JLQnKFhYWFhYWFhYWFeR4ehYWF
        hR4eHh6FhYSFhYVSRAAAAAAATmZuSktLS0tLS0tLG2GAa4WFhYWFhYWFhYWFhYWFhYWFhYWFhYSFhYWF
        RAAAAAAAVFSFS0tLS1VLS0swGh0XCDCFhYWFhYWFhYWFhYWFhYWFhYSFhIWEhIRvRAAAAAAAADN8bFVV
        VVVVV1UHBwgICAiFhYWFhYWFhYWFhYWFhYWFhYWFhYWEhIRvRAAAAAAAAFxZhVpVV1dXV1dLQleFY4WF
        hYWFhYWFhYWFhYWFhYWFhYWFhIWFhYVzUgAAAAAAAAAzcnlaW1pbWlpXW1eAhYWFhYWFhYWFhYWFhYWF
        hYWFhYWFhYWFhYV+AAAAAAAAAABUQ4VyW1tbW1tbW1t8hYWFhYWFhYWFhYWFfHl8eWxsbGxlZGaFNAAA
        AAAAAAAAAAAAVEOFeVthW2FbYVtqbHJubGpqaWRhW1tbYltbYVtiW1thW1uFMwAAAAAAAAAAAAAAAFRK
        gXxkZGRkZGRbZGRhZGFhYmRiZGRkZGRkZGRjZGRkZGSFMwAAAAAAAAAAAAAAAABUQ3eFcmRkZGRmZmRm
        ZGRkZGRmZGRkZGRkZGRmZGRkZGSFMwAAAAAAAAAAAAAAAAAAVDNXgIV8bmxpZmpmaWZpZmpmamhpZmlm
        aWZqZmpoaWaFMwAAAAAAAAAAAAAAAAAAAABcM05qfIWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFMwAA
        AAAAAAAAAAAAAAAAAAAAAFRONzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMwAAAAAAAAAA////////
        //////////////////////////////x////////+AH///////wAAf/////+AAAB/////wAAAAH///wAA
        AAAAf///AAAAAAB///8AAAAAAB///wAAAAAAH///AAAAAAAf//8AAAAAAA///wAAAAAAD///AAAAAAAP
        //8AAAAAAA///wAAAAAAD///AAAAAAAP//8AAAAAAB///wAAAAAAP///AAAAAAA///8AAAAAAD///wAA
        AAAAP///AAAAAAAP//8AAAAAAA///wAAAAAAD///AAAAAAAH//8AAAAAAAf//wAAAAAAB///AAAAAAAH
        //8AAAAAAAf//wAAAAAAB///AAAAAAAP//8AAAAAAB///wAAAAAAH///AAAAAAAf//8AAAAAAB///4AA
        AAAAH///gAAAAAAf///AAAAAAD///8AAAAAA////4AAAAAD////wAAAAAP////gAAAAA/////AAAAAD/
        ////AAAAAP/////AAAAA////KAAAACAAAABAAAAAAQAIAAAAAACABAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABqPmYAcT5uAHk/dgBwQ2wAdElvAHpMdgB7X3oAgVR8AEo8yABBUMIAhlqBAItfiACOXowAlluWAIhp
        hQCPZ4wAi3GLAJljmQCaapgAn2+fAIZ5kQCSdJAAlHeTAJF5kACRfpAAmH+WAJ93ngCmeKcAgICAAJSG
        ngCfiJ4AnJGlAKOIoACug64AromuAKWQpACkmqwArJmrALaVtgC2lLgAv6m+ALy0vAC/n8AAs7P/AMuu
        ywDJs8kAyLvIANi52QDPxM4A1MDTANnP2ADg2N8A39rgAOTO5ADl0+UA5N3kAOjW6QDt4O4A7ubuAO3r
        7QDw7vAA9vT2APjx+AD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAA
        AAARFBIREREREREREQAAAAAAISEkISMhJCEjIREACQkJDCEjJCEkHyEjIyQRAAIPEBgiIiIiFQcjJCEj
        CwEDFwgKIh8VIxUHIyEhJAoBBBYCAiIfBx8hByEjJCQKAgQWAgYhIgcHIQcHIyMhEQAGFgUFISQVBxUc
        ByEhJBEABhgJCSQkIwcHFQcVJCIKAQUdEAkjIyEHBwcHByEhCQEFHRsTJCEkIQcgBwcjJAwCCR0bFCMk
        IyEjIyMjISQUAAwUHxQjIyQjJCEjJCMkEgAAAh0fHBkaGhoaGhoaCgAAAAAJER0hISEgICAhIA0AAAAA
        AAwLCAgICAgICAgLAADwAf//8AH//wAB//8AAP//AAD//wAA//8AAf//AAH//wAA//8AAP//AAD//wAB
        //8AAf//gAP//8AD///gA///
</value>
  </data>
</root>